version: '2.2'

services:
  db:
    restart: always
    image: postgres:14.9-alpine3.18
    env_file:
      - .env
    container_name: 7k_db
    environment:
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    user: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready' ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: 7k_app
    env_file:
      - .env
    command: >
      bash -c "python manage.py collectstatic --noinput
      && python manage.py makemigrations
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - static_data:/code/static/
      - media_data:/code/media/
      - .:/code
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started

  redis:
    image: redis:7.2.0-alpine3.18
    container_name: 7k_redis
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - redis_data:/data
    ports:
      - '6379:6379'
    expose:
      - '6379'
  celery:
    build: .
    container_name: 7k_celery
    env_file:
      - .env
    command: >
      bash -c "celery -A config worker --beat --loglevel=info"
    volumes:
      - .:/code
    links:
      - redis
    depends_on:
      - app
      - redis


volumes:
  postgres_data:
  redis_data:
  static_data:
  media_data: